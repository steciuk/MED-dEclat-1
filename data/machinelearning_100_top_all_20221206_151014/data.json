{
  "title":{
    "0":"[Project] From books to presentations in 10s with AR + ML",
    "1":"[D] A Demo from 1993 of 32-year-old Yann LeCun showing off the World's first Convolutional Network for Text Recognition",
    "2":"[R] First Order Motion Model applied to animate paintings",
    "3":"[N] AI can turn old photos into moving Images \/ Link is given in the comments - You can also turn your old photo like this",
    "4":"[D] This AI reveals how much time politicians stare at their phone at work",
    "5":"[D] Types of Machine Learning Papers",
    "6":"[D] The machine learning community has a toxicity problem",
    "7":"I made a robot that punishes me if it detects that if I am procrastinating on my assignments [P]",
    "8":"[Project] NEW PYTHON PACKAGE: Sync GAN Art to Music with \"Lucid Sonic Dreams\"! (Link in Comments)",
    "9":"[P] Using oil portraits and First Order Model to bring the paintings back to life",
    "10":"[D] Convolution Neural Network Visualization - Made with Unity 3D and lots of Code \/ source - stefsietz (IG)",
    "11":"[P] Doing a clone of Rocket League for AI experiments. Trained an agent to air dribble the ball.",
    "12":"[R] Speech-to-speech translation for a real-world unwritten language",
    "13":"[R] Consistent Video Depth Estimation (SIGGRAPH 2020) - Links in the comments.",
    "14":"[P] Using Deep Learning to draw and write with your hand and webcam \ud83d\udc46. The model tries to predict whether you want to have 'pencil up' or 'pencil down' (see at the end of the video). You can try it online (link in comments)",
    "15":"[R] [RIFE: 15FPS to 60FPS] Video frame interpolation , GPU real-time flow-based method",
    "16":"[R] Wolfenstein and Doom Guy upscaled into realistic faces with PULSE",
    "17":"[P] I made an AI twitter bot that draws people\u2019s dream jobs for them.",
    "18":"[D] Siraj has a new paper: 'The Neural Qubit'. It's plagiarised",
    "19":"A little seasonal homage... [P]",
    "20":"[D] Types of Machine Learning Papers",
    "21":"[D] An example of machine learning bias on popular. Is this specific case a problem? Thoughts?",
    "22":"[R] Neural Color Transfer between Images",
    "23":"[D] Types of Machine Learning Papers",
    "24":"[R] Adversarial Latent Autoencoders (CVPR2020 paper + code)",
    "25":"[P] I trained a GAN to generate photorealistic fake penises",
    "26":"[D]Neural-Style-PT is capable of creating complex artworks under 20 minutes.",
    "27":"[P] Trained an AI with ML to navigate an obstacle course from Rocket League",
    "28":"[P] WebtoonMe Project: Selfie to Webtoon style",
    "29":"[P] SkinDeep, Remove Tattoos using Deep Learning. GitHub Link in comments.",
    "30":"[P] Creating \"real\" versions of Pixar characters using the pixel2style2pixel framework. Process and links to more examples in comments.",
    "31":"A demo of Stable Diffusion, a text-to-image model, being used in an interactive video editing application.",
    "32":"[P] ArcaneGAN: face portrait to Arcane style",
    "33":"[R] VToonify: Controllable High-Resolution Portrait Video Style Transfer",
    "34":"[R] GANs N' Roses: Stable, Controllable, Diverse Image to Image Translation (works for videos too!)",
    "35":"[R] End-to-End Referring Video Object Segmentation with Multimodal Transformers",
    "36":"[R] [P] AnimeGANv2 Face Portrait v2",
    "37":"[D] A Super Harsh Guide to Machine Learning",
    "38":"[P] Vscode extension that automatically creates a summary part of Python docstring using CodeBERT",
    "39":"[R] Vid2Player: Controllable Video Sprites that Behave and Appear like Professional Tennis Players",
    "40":"[P] StyleGAN2-ADA trained on cute corgi images <3",
    "41":"[P] DeepForSpeed: A self driving car in Need For Speed Most Wanted with just a single ConvNet to play ( inspired by nvidia )",
    "42":"[P] Toonifying a photo using StyleGAN model blending and then animating with First Order Motion. Process and variations in comments.",
    "43":"[N] Ian Goodfellow, Apple\u2019s director of machine learning, is leaving the company due to its return to work policy. In a note to staff, he said \u201cI believe strongly that more flexibility would have been the best policy for my team.\u201d He was likely the company\u2019s most cited ML expert.",
    "44":"[R] JoJoGAN: One Shot Face Stylization",
    "45":"[P] I trained a recurrent neural network trained to draw dick doodles",
    "46":"[P] Cross-Model Interpolations between 5 StyleGanV2 models - furry, FFHQ, anime, ponies, and a fox model",
    "47":"[R][P] Runway Stable Diffusion Inpainting: Erase and Replace, add a mask and text prompt to replace objects in an image",
    "48":"[P] AppleNeuralHash2ONNX: Reverse-Engineered Apple NeuralHash, in ONNX and Python",
    "49":"[P] Realtime multihand pose estimation demo",
    "50":"[R] WHIRL algorithm: Robot performs diverse household tasks via exploration after watching one human video (link in comments)",
    "51":"[R] It\u2019s wild to see an AI literally eyeballing raytracing based on 100 photos to create a 3d scene you can step inside \u2600\ufe0f Low key getting addicted to NeRF-ing imagery datasets\ud83e\udd29",
    "52":"[R] Deep Image Analogy",
    "53":"[P] stablediffusion-infinity: Outpainting with Stable Diffusion on an infinite canvas",
    "54":"[P] The easiest way to process and tag video data",
    "55":"[P] Pose Animator: SVG animation tool using real-time human perception TensorFlow.js models (links in comments)",
    "56":"[D] Why can't you guys comment your fucking code?",
    "57":"[D] I don't really trust papers out of \"Top Labs\" anymore",
    "58":"[P] YoHa: A practical hand tracking engine.",
    "59":"[P] I made Communities: a library of clustering algorithms for network graphs (link in comments)",
    "60":"[P] Introducing ArtLine, Create amazing Line Art Portraits. GitHub Link in comments",
    "61":"[R] AI Learns Playing Basketball Just Like Humans! [https:\/\/www.youtube.com\/watch?v=Rzj3k3yerDk]",
    "62":"[R] Clova AI Research's StarGAN v2 (CVPR 2020 + code, pre-trained models, datasets)",
    "63":"[Project] From any text-dataset to valuable insights in seconds with Texthero",
    "64":"[P] YoHa: A practical hand tracking engine.",
    "65":"[P] Keras Implementation of Image Outpaint",
    "66":"[R] RigNet: Neural Rigging for Articulated Characters",
    "67":"[News] New Google tech - Geospatial API uses computer vision and machine learning to turn 15 years of street view imagery into a 3d canvas for augmented reality developers",
    "68":"[R] SIMPLERECON \u2014 3D Reconstruction without 3D Convolutions \u2014 73ms per frame !",
    "69":"[D] Siraj Raval - Potentially exploiting students, banning students asking for refund. Thoughts?",
    "70":"[P] Predict your political leaning from your reddit comment history! (Webapp linked in comments)",
    "71":"[R] AlphaFold 2",
    "72":"[P] Generative Ramen",
    "73":"[D] If you had to show one paper to someone to show that machine learning is beautiful, what would you choose? (assuming they're equipped to understand it)",
    "74":"[Project] These plants do not exist - Using StyleGan2",
    "75":"AMA: We are the Google Brain team. We'd love to answer your questions about machine learning.",
    "76":"[P] Landing the Falcon booster with Reinforcement Learning in OpenAI",
    "77":"[P] Run Stable Diffusion locally with a web UI + artist workflow video",
    "78":"[N] 4 Months after Siraj was caught scamming he has still not refunded any victims based in India, Philippines, or any other countries with no legal recourse. He makes an apology video, and when his victims ask for their refund, his followers respond with \"Be kind. He's asking for your forgiveness\"",
    "79":"[N]: Dall-E 2 Explained",
    "80":"[P] Real-time Mask RCNN using Facebook Detectron",
    "81":"[P] YOLOv4 \u2014 The most accurate real-time neural network on MS COCO Dataset",
    "82":"[R] ByteTrack: Multi-Object Tracking by Associating Every Detection Box",
    "83":"[P] I made an AI that can drive in a real racing game (Trackmania)",
    "84":"[D] The current and future state of AI\/ML is shockingly demoralizing with little hope of redemption",
    "85":"[P] Tutorial: Real-time YOLOv3 on a Laptop Using Sparse Quantization",
    "86":"[R] RMA algorithm: Robots that learn to adapt instantly to changing real-world conditions (link in comments)",
    "87":"[N] new SNAPCHAT feature transfers an image of an upper body garment in realtime on a person in AR",
    "88":"[P] Trained a Sub-Zero bot for Mortal Kombat II using PPO2. Here's a single-player run against the first 5 opponents.",
    "89":"[D] Dedicated to all those researchers in fear of being scooped :)",
    "90":"[D] Siraj is still plagiarizing",
    "91":"[P] ObjectCut - API that removes automatically image backgrounds with DL (objectcut.com)",
    "92":"[Project][Reinforcement Learning] Using DQN (Q-Learning) to play the Game 2048.",
    "93":"We are Oriol Vinyals and David Silver from DeepMind\u2019s AlphaStar team, joined by StarCraft II pro players TLO and MaNa! Ask us anything",
    "94":"[P] Simple fastai based face restoration project, GitHub link in comments.",
    "95":"[P] Stylegan Vintage-Style Portraits",
    "96":"[D] Has anyone noticed a lot of ML research into facial recognition of Uyghur people lately?",
    "97":"[P] Finetuned Diffusion: multiple fine-tuned Stable Diffusion models, trained on different styles",
    "98":"[R] Few-Shot Patch-Based Training (Siggraph 2020) - Dr. Ond\u0159ej Texler - Link to free zoom lecture by the author in comments",
    "99":"[D] Chinese government uses machine learning not only for surveillance, but also for predictive policing and for deciding who to arrest in Xinjiang"
  },
  "tokens":{
    "0":[
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9
    ],
    "1":[
      10,
      11,
      12,
      1,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26
    ],
    "2":[
      27,
      21,
      28,
      29,
      30,
      31,
      3,
      32,
      33
    ],
    "3":[
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      5,
      19,
      46,
      47,
      48,
      49,
      50,
      51
    ],
    "4":[
      10,
      51,
      35,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61
    ],
    "5":[
      10,
      62,
      13,
      63,
      64,
      65
    ],
    "6":[
      10,
      19,
      63,
      64,
      66,
      67,
      11,
      68,
      69
    ],
    "7":[
      70,
      71,
      11,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84
    ],
    "8":[
      0,
      85,
      86,
      87,
      88,
      89,
      90,
      3,
      91,
      7,
      92,
      93,
      94,
      43,
      5,
      46
    ],
    "9":[
      84,
      95,
      96,
      97,
      98,
      21,
      28,
      30,
      3,
      99,
      19,
      33,
      100,
      101
    ],
    "10":[
      10,
      22,
      102,
      23,
      103,
      71,
      7,
      104,
      98,
      105,
      13,
      106,
      107,
      108,
      109
    ],
    "11":[
      84,
      110,
      11,
      111,
      13,
      112,
      113,
      24,
      35,
      114,
      115,
      116,
      117,
      3,
      118,
      119,
      19,
      120
    ],
    "12":[
      27,
      121,
      122,
      24,
      11,
      123,
      124,
      125
    ],
    "13":[
      27,
      126,
      127,
      128,
      129,
      130,
      43,
      5,
      19,
      46
    ],
    "14":[
      84,
      95,
      131,
      64,
      3,
      132,
      98,
      133,
      7,
      49,
      134,
      135,
      19,
      30,
      136,
      137,
      138,
      47,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      58,
      146,
      13,
      127,
      36,
      77,
      147,
      43,
      5,
      46
    ],
    "15":[
      27,
      148,
      149,
      3,
      127,
      150,
      151,
      152,
      153,
      154,
      155
    ],
    "16":[
      27,
      156,
      98,
      157,
      158,
      159,
      40,
      160,
      161,
      7,
      162
    ],
    "17":[
      84,
      70,
      71,
      116,
      35,
      163,
      164,
      73,
      132,
      165,
      94,
      166,
      24,
      167
    ],
    "18":[
      10,
      168,
      67,
      11,
      85,
      65,
      19,
      102,
      169,
      77,
      170
    ],
    "19":[
      11,
      171,
      172,
      173,
      84
    ],
    "20":[
      10,
      62,
      13,
      63,
      64,
      65
    ],
    "21":[
      10,
      116,
      174,
      13,
      63,
      64,
      175,
      81,
      176,
      44,
      51,
      177,
      178,
      11,
      69,
      179
    ],
    "22":[
      27,
      102,
      180,
      181,
      182,
      42
    ],
    "23":[
      10,
      62,
      13,
      63,
      64,
      65
    ],
    "24":[
      27,
      183,
      184,
      185,
      186,
      65,
      106
    ],
    "25":[
      84,
      70,
      115,
      11,
      89,
      3,
      187,
      188,
      189,
      190
    ],
    "26":[
      191,
      44,
      192,
      13,
      193,
      194,
      195,
      196,
      197
    ],
    "27":[
      84,
      115,
      116,
      35,
      7,
      9,
      3,
      198,
      199,
      200,
      1,
      112,
      113
    ],
    "28":[
      84,
      201,
      0,
      202,
      3,
      203,
      204
    ],
    "29":[
      84,
      205,
      206,
      207,
      95,
      131,
      64,
      208,
      43,
      5,
      46
    ],
    "30":[
      84,
      193,
      209,
      210,
      13,
      211,
      212,
      95,
      19,
      213,
      214,
      215,
      98,
      43,
      3,
      216,
      174,
      5,
      46
    ],
    "31":[
      11,
      12,
      13,
      217,
      218,
      219,
      30,
      220,
      95,
      5,
      116,
      221,
      127,
      222,
      223
    ],
    "32":[
      84,
      224,
      161,
      97,
      3,
      225,
      204
    ],
    "33":[
      27,
      226,
      227,
      228,
      97,
      127,
      204,
      181
    ],
    "34":[
      27,
      89,
      34,
      229,
      217,
      227,
      230,
      42,
      3,
      122,
      61,
      24,
      127,
      231
    ],
    "35":[
      27,
      232,
      233,
      127,
      234,
      235,
      7,
      236,
      237
    ],
    "36":[
      27,
      84,
      238,
      161,
      97,
      239
    ],
    "37":[
      10,
      11,
      240,
      241,
      242,
      3,
      63,
      64
    ],
    "38":[
      84,
      243,
      244,
      73,
      245,
      193,
      11,
      246,
      247,
      13,
      86,
      248,
      95,
      249
    ],
    "39":[
      27,
      250,
      227,
      127,
      251,
      73,
      252,
      98,
      253,
      50,
      254,
      255,
      256
    ],
    "40":[
      84,
      257,
      115,
      81,
      258,
      259,
      42
    ],
    "41":[
      84,
      260,
      11,
      261,
      262,
      263,
      5,
      264,
      24,
      265,
      266,
      139,
      7,
      267,
      268,
      269,
      3,
      270,
      271,
      272,
      273
    ],
    "42":[
      84,
      274,
      11,
      39,
      95,
      275,
      30,
      276,
      98,
      277,
      32,
      7,
      21,
      28,
      29,
      215,
      278,
      5,
      46
    ],
    "43":[
      34,
      279,
      280,
      281,
      282,
      13,
      63,
      64,
      44,
      283,
      19,
      284,
      285,
      3,
      77,
      286,
      61,
      287,
      5,
      11,
      288,
      289,
      290,
      291,
      70,
      292,
      293,
      73,
      216,
      294,
      295,
      140,
      296,
      297,
      24,
      82,
      298,
      299,
      50,
      266,
      300,
      9,
      301
    ],
    "44":[
      27,
      302,
      303,
      304,
      161,
      305
    ],
    "45":[
      84,
      70,
      115,
      11,
      306,
      102,
      23,
      3,
      132,
      307,
      308
    ],
    "46":[
      84,
      309,
      151,
      182,
      310,
      30,
      311,
      312,
      32,
      313,
      98,
      11,
      314
    ],
    "47":[
      315,
      316,
      217,
      218,
      317,
      318,
      98,
      319,
      320,
      11,
      321,
      25,
      322,
      3,
      234,
      5,
      116,
      42
    ],
    "48":[
      84,
      323,
      324,
      281,
      325,
      5,
      326,
      98,
      86
    ],
    "49":[
      84,
      153,
      327,
      328,
      129,
      12
    ],
    "50":[
      27,
      329,
      330,
      72,
      331,
      230,
      332,
      333,
      334,
      335,
      336,
      337,
      303,
      338,
      127,
      43,
      5,
      46
    ],
    "51":[
      27,
      77,
      339,
      3,
      145,
      116,
      35,
      340,
      341,
      342,
      343,
      81,
      39,
      193,
      11,
      10,
      344,
      47,
      36,
      345,
      346,
      347,
      348,
      349,
      350,
      351,
      352,
      353
    ],
    "52":[
      27,
      131,
      42,
      354
    ],
    "53":[
      84,
      355,
      356,
      7,
      217,
      218,
      81,
      116,
      357,
      358
    ],
    "54":[
      84,
      19,
      359,
      360,
      3,
      215,
      98,
      361,
      127,
      362
    ],
    "55":[
      84,
      328,
      32,
      363,
      364,
      95,
      153,
      338,
      365,
      366,
      30,
      43,
      5,
      46
    ],
    "56":[
      10,
      367,
      368,
      47,
      158,
      46,
      49,
      369,
      106
    ],
    "57":[
      10,
      70,
      370,
      371,
      372,
      65,
      373,
      13,
      374,
      375,
      376
    ],
    "58":[
      84,
      377,
      11,
      378,
      134,
      379,
      380
    ],
    "59":[
      84,
      70,
      71,
      66,
      11,
      381,
      13,
      382,
      330,
      24,
      23,
      383,
      43,
      5,
      46
    ],
    "60":[
      84,
      384,
      385,
      193,
      386,
      387,
      90,
      97,
      208,
      43,
      5,
      46
    ],
    "61":[
      27,
      35,
      64,
      270,
      388,
      267,
      50,
      338,
      389
    ],
    "62":[
      27,
      390,
      35,
      391,
      392,
      239,
      186,
      106,
      393,
      30,
      353
    ],
    "63":[
      0,
      1,
      394,
      395,
      3,
      396,
      397,
      5,
      398,
      7,
      399
    ],
    "64":[
      84,
      377,
      11,
      378,
      134,
      379,
      380
    ],
    "65":[
      84,
      400,
      401,
      13,
      42,
      356
    ],
    "66":[
      27,
      402,
      102,
      403,
      24,
      404,
      212
    ],
    "67":[
      85,
      405,
      406,
      407,
      408,
      95,
      409,
      410,
      98,
      63,
      64,
      3,
      37,
      411,
      13,
      412,
      413,
      352,
      40,
      11,
      10,
      358,
      24,
      414,
      415,
      416
    ],
    "68":[
      27,
      417,
      10,
      418,
      419,
      22,
      420,
      421,
      150
    ],
    "69":[
      10,
      168,
      422,
      423,
      424,
      425,
      426,
      427,
      24,
      428,
      179
    ],
    "70":[
      84,
      137,
      49,
      429,
      430,
      1,
      431,
      46,
      432,
      433,
      43,
      5
    ],
    "71":[
      27,
      434
    ],
    "72":[
      84,
      187,
      435
    ],
    "73":[
      10,
      76,
      47,
      436,
      3,
      17,
      303,
      65,
      437,
      73,
      63,
      64,
      44,
      438,
      439,
      295,
      440,
      441,
      442,
      443,
      444,
      77
    ],
    "74":[
      0,
      445,
      446,
      110,
      447,
      448,
      95,
      275
    ],
    "75":[
      449,
      450,
      451,
      19,
      405,
      452,
      298,
      453,
      454,
      3,
      455,
      49,
      456,
      457,
      63,
      64
    ],
    "76":[
      84,
      458,
      19,
      459,
      460,
      7,
      461,
      64,
      5,
      462
    ],
    "77":[
      84,
      463,
      217,
      218,
      464,
      7,
      11,
      465,
      466,
      467,
      468,
      127
    ],
    "78":[
      34,
      469,
      336,
      168,
      299,
      470,
      471,
      290,
      67,
      472,
      447,
      428,
      394,
      473,
      343,
      5,
      474,
      475,
      143,
      476,
      477,
      7,
      478,
      479,
      480,
      481,
      116,
      482,
      127,
      98,
      483,
      484,
      427,
      24,
      59,
      485,
      486,
      220,
      487,
      49,
      488
    ],
    "79":[
      34,
      489,
      490
    ],
    "80":[
      84,
      153,
      321,
      491,
      95,
      492,
      493
    ],
    "81":[
      84,
      494,
      19,
      266,
      495,
      153,
      102,
      23,
      81,
      420,
      496,
      353
    ],
    "82":[
      27,
      497,
      498,
      379,
      272,
      499,
      500,
      78,
      501
    ],
    "83":[
      84,
      70,
      71,
      116,
      35,
      73,
      36,
      262,
      5,
      11,
      209,
      502,
      503,
      504
    ],
    "84":[
      10,
      19,
      505,
      98,
      506,
      507,
      13,
      508,
      44,
      509,
      510,
      7,
      171,
      511,
      512
    ],
    "85":[
      84,
      513,
      153,
      494,
      81,
      11,
      514,
      95,
      515,
      516
    ],
    "86":[
      27,
      517,
      330,
      72,
      73,
      64,
      3,
      518,
      519,
      520,
      123,
      521,
      43,
      5,
      46
    ],
    "87":[
      34,
      85,
      522,
      523,
      181,
      116,
      42,
      13,
      524,
      525,
      526,
      5,
      153,
      81,
      11,
      527,
      8
    ],
    "88":[
      84,
      115,
      11,
      528,
      164,
      24,
      529,
      530,
      531,
      95,
      532,
      533,
      534,
      463,
      535,
      19,
      21,
      536
    ],
    "89":[
      10,
      537,
      3,
      538,
      539,
      391,
      5,
      540,
      13,
      220,
      541
    ],
    "90":[
      10,
      168,
      44,
      472,
      542
    ],
    "91":[
      84,
      543,
      408,
      73,
      206,
      245,
      42,
      544,
      7,
      545,
      546
    ],
    "92":[
      547,
      64,
      95,
      548,
      549,
      3,
      270,
      19,
      503
    ],
    "93":[
      450,
      451,
      550,
      551,
      98,
      552,
      553,
      1,
      554,
      555,
      298,
      556,
      272,
      557,
      531,
      558,
      256,
      559,
      560,
      427,
      561,
      562
    ],
    "94":[
      84,
      563,
      564,
      343,
      161,
      565,
      0,
      208,
      43,
      5,
      46
    ],
    "95":[
      84,
      275,
      566,
      97
    ],
    "96":[
      10,
      67,
      567,
      568,
      11,
      105,
      13,
      9,
      391,
      40,
      569,
      26,
      570,
      165,
      571
    ],
    "97":[
      84,
      572,
      218,
      573,
      217,
      30,
      115,
      81,
      574,
      204
    ],
    "98":[
      27,
      575,
      576,
      115,
      130,
      577,
      578,
      579,
      43,
      3,
      580,
      581,
      582,
      272,
      19,
      583,
      5,
      46
    ],
    "99":[
      10,
      584,
      585,
      95,
      63,
      64,
      447,
      586,
      24,
      587,
      588,
      48,
      137,
      589,
      98,
      590,
      591,
      3,
      592,
      5,
      593
    ]
  }
}